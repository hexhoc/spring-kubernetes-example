version: '3.8'

services:
    db:
        image: postgres
        container_name: postgres
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.2.0
        container_name: elasticsearch
        ports:
            - 9200:9200
        environment:
            # (not recommended) disable all security for anonymous access
            ES_JAVA_OPTS: "-Xms512m -Xmx512m"
            xpack.security.enabled: "false"
            discovery.type: single-node
            logger.level: "INFO"
    kibana:
        image: docker.elastic.co/kibana/kibana:8.2.0
        container_name: kibana
        ports:
            - 5601:5601
        restart: on-failure
        depends_on:
            - elasticsearch
    filebeat:
        build:
            context: ./filebeat
            dockerfile: Dockerfile
        container_name: filebeat
        volumes:
#            - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
            - /var/lib/docker/containers:/var/lib/docker/containers:ro           # Docker logs
            - /var/run/docker.sock:/var/run/docker.sock:ro                       # Additional information about containers
        user: root                                                             # Allow access to log files and docker.sock
        restart: on-failure
    jms:
        image: vromero/activemq-artemis
        container_name: jms
        ports:
            - 8161:8161
            - 61616:61616

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 2181:2181

    kafka:
        image: confluentinc/cp-kafka:latest
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            # kafka service is exposed to the host applications through port 29092, but it is actually
            # advertised on port 9092 within the container environment
            - 29092:29092
            - 9101:9101
        environment:
            KAFKA_BROKER_ID: 1
            # Comma separated host:port pairs, each corresponding to a Zookeeper Server.
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            # Listeners to publish to ZooKeeper for clients to use, if different than the listeners config property.
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            # Map between listener names and security protocols.
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            # The replication factor for the offsets topic
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            # The replication factor for the transaction topic
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_JMX_PORT: 9101
            KAFKA_JMX_HOSTNAME: localhost

    coffee-service:
        image: hexhoc/kbe-coffeehouse-coffee-service
        container_name: coffee-service
        ports:
            - 8080:8080
            - 9080:9080
        environment:
            - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:9080
            - SPRING_PROFILES_ACTIVE=docker
        depends_on:
            - inventory-service
            - jms
        restart: on-failure
        labels:
            collect_logs_with_filebeat: "true"
            decode_log_event_to_json_object: "true"
    inventory-service:
        image: hexhoc/kbe-coffeehouse-inventory-service
        container_name: inventory-service
        ports:
            - 8082:8082
            - 9082:9082
        environment:
            - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:9082
            - SPRING_PROFILES_ACTIVE=docker
        depends_on:
            - jms
        restart: on-failure
        labels:
            collect_logs_with_filebeat: "true"
            decode_log_event_to_json_object: "true"
    inventory-failover:
        image: hexhoc/kbe-coffeehouse-inventory-failover
        container_name: inventory-failover
        ports:
            - 8083:8083
            - 9083:9083
        environment:
            - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:9083
    order-service:
        image: hexhoc/kbe-coffeehouse-order-service
        container_name: order-service
        ports:
            - 8081:8081
            - 9081:9081
        environment:
            - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:9081
            - SPRING_PROFILES_ACTIVE=docker
        depends_on:
            - coffee-service
            - jms
        restart: on-failure
        labels:
            collect_logs_with_filebeat: "true"
            decode_log_event_to_json_object: "true"
    gateway:
        image: hexhoc/kbe-coffeehouse-gateway
        container_name: gateway
        ports:
            - 9090:9090
            - 9099:9099
        environment:
            - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:9099
        depends_on:
            - inventory-service
            - coffee-service
            - order-service
            - inventory-failover
        restart: on-failure
        labels:
            collect_logs_with_filebeat: "true"
            decode_log_event_to_json_object: "true"

